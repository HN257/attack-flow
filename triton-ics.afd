{"namespace":"flow-1","canvas":{"cameraX":2.6666667461395264,"cameraY":8400,"padding":45,"pageSizeX":800,"pageSizeY":800},"nodes":[{"id":"1","type":"action","x0":401.33332347869873,"y0":369.33330154418945,"x1":806,"y1":668,"payload":{"name":"T0818: Engineering Workstation Compromise","description":"Compromise workstations within the safety network","timestamp":"","reference":"https://attack.mitre.org/techniques/T0818/","succeeded":0,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},{"id":"2","type":"asset","x0":498.666748046875,"y0":184.66668701171875,"x1":747,"y1":270,"payload":{"state":"access gained & manipulated"}},{"id":"3","type":"data_property","x0":858.6668090820312,"y0":173.33332061767578,"x1":1114,"y1":259,"payload":{"target":"foreign oil refinery's safety devices"}},{"id":"4","type":"asset","x0":436.66668701171875,"y0":752.3333740234375,"x1":685,"y1":838,"payload":{"state":"compromised"}},{"id":"5","type":"action","x0":157.99994945526123,"y0":931.3333168029785,"x1":563,"y1":1230,"payload":{"name":"T0858: Change Operating Mode","description":"Halt or run a program through the TriStation protocol","timestamp":"","reference":"https://attack.mitre.org/techniques/T0858/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"OR"}},{"id":"6","type":"action","x0":608.6666975021362,"y0":931.3332862854004,"x1":1013,"y1":1230,"payload":{"name":"T0871: Execution through API","description":"Leverage a custom implementation of the TriStation protocol, which trigger APIs related to program download, program allocation, and program changes","timestamp":"","reference":"https://attack.mitre.org/techniques/T0871/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"OR"}},{"id":"7","type":"asset","x0":458.6666259765625,"y0":1320.3334655761719,"x1":707,"y1":1406,"payload":{"state":"compromised"}},{"id":"8","type":"data_property","x0":121.33348083496094,"y0":1322.6665725708008,"x1":377,"y1":1408,"payload":{"target":"shut down refinery for several days"}},{"id":"9","type":"action","x0":388.66669750213623,"y0":1481.9999732971191,"x1":793,"y1":1781,"payload":{"name":"T0874: Hooking","description":"TRITON's injector modifies the address of the handler for a TriStation protocol command so that when the command is received, the payload may be executed instead of normal processing","timestamp":"","reference":"https://attack.mitre.org/techniques/T0874/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},{"id":"10","type":"asset","x0":452.6666259765625,"y0":1836.3334655761719,"x1":701,"y1":1922,"payload":{"state":"compromised"}},{"id":"11","type":"action","x0":364.00007152557373,"y0":2000.6665382385254,"x1":769,"y1":2299,"payload":{"name":"T0821: Modify Controller Tasking","description":"Some TRITON components are added to the program table on the Tricon so that they are executed by the firmware once each cycle","timestamp":"","reference":"https://attack.mitre.org/techniques/T0821/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},{"id":"12","type":"asset","x0":433.99993896484375,"y0":2365.6669006347656,"x1":683,"y1":2451,"payload":{"state":"compromised"}},{"id":"13","type":"action","x0":364.6667585372925,"y0":2527.3332862854004,"x1":769,"y1":2826,"payload":{"name":"T0834: Native API","description":"TRITON's payload takes commands from TsHi.ExplReadRam(Ex), TsHi.ExplWriteRam(Ex), and TsHi.ExplExec functions to perform operations on controller memory and registers using syscalls written in PowerPC shellcode","timestamp":"","reference":"https://attack.mitre.org/techniques/T0834/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},{"id":"14","type":"asset","x0":470.8887939453125,"y0":2889.667022705078,"x1":719,"y1":2975,"payload":{"state":"compromised"}},{"id":"15","type":"action","x0":158.88898754119873,"y0":3067.3332862854004,"x1":563,"y1":3366,"payload":{"name":"T0853: Scripting","description":"Communicate with Triconex Tricon PLCs using its custom Python script. The script uses four Python modules that collectively implement the TriStation protocol via UDP port 1502","timestamp":"","reference":"https://attack.mitre.org/techniques/T0853/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},{"id":"16","type":"action","x0":646.4445295333862,"y0":3065.110996246338,"x1":1051,"y1":3364,"payload":{"name":"T0885: Commonly Used Port","description":"Communicate over a commonly used port to bypass firewalls or network detection systems and to blend in with normal network activity, to avoid more detailed inspection","timestamp":"","reference":"https://attack.mitre.org/techniques/T0885/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"OR"}},{"id":"17","type":"asset","x0":505.1109619140625,"y0":3462.555938720703,"x1":754,"y1":3548,"payload":{"state":"compromised"}},{"id":"18","type":"action","x0":417.55561351776123,"y0":3618.4441566467285,"x1":822,"y1":3917,"payload":{"name":"T0857: System Firmware","description":"TRITON's injector injects the payload into the Tricon PLCs' running firmware","timestamp":"","reference":"https://attack.mitre.org/techniques/T0857/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},{"id":"19","type":"action","x0":482.88898754119873,"y0":4132.6663246154785,"x1":887,"y1":4431,"payload":{"name":"T0890: Exploitation for Privilege Escalation","description":"Gain supervisor-level access and control system states by exploiting a vulnerability","timestamp":"","reference":"https://attack.mitre.org/techniques/T0890/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},{"id":"20","type":"asset","x0":537.555419921875,"y0":3977.6670837402344,"x1":786,"y1":4063,"payload":{"state":"compromised"}},{"id":"21","type":"asset","x0":517.5552978515625,"y0":4506.111602783203,"x1":766,"y1":4592,"payload":{"state":"compromised"}},{"id":"22","type":"action","x0":454.0000104904175,"y0":4654.8884925842285,"x1":859,"y1":4953,"payload":{"name":"T0820: Exploitation for Evasion","description":"TRITON's injector exploits a vulnerability in the device firmware to escalate privileges and then it disables and (later patches) a firmware RAM/ROM consistency check","timestamp":"","reference":"https://attack.mitre.org/techniques/T0820/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},{"id":"23","type":"asset","x0":549.11083984375,"y0":5022.111602783203,"x1":798,"y1":5108,"payload":{"state":"compromised"}},{"id":"24","type":"action","x0":460.66669750213623,"y0":5169.9995765686035,"x1":865,"y1":5469,"payload":{"name":"T0872: Indicator Removal on Host","description":"After running the malicious payload, TRITON's Python script overwrites the malicious payload with a \"dummy\" program","timestamp":"","reference":"https://attack.mitre.org/techniques/T0872/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},{"id":"25","type":"asset","x0":569.11083984375,"y0":5552.333770751953,"x1":818,"y1":5638,"payload":{"state":"compromised"}},{"id":"26","type":"action","x0":479.77790355682373,"y0":5690.44397354126,"x1":884,"y1":5989,"payload":{"name":"T0849: Masquerading","description":"TRITON's Python script masquerades as legitimate Triconex software. TRITON's injector masquerades as a standard compiled PowerPC program for the Triconex PLC","timestamp":"","reference":"https://attack.mitre.org/techniques/T0849/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},{"id":"27","type":"asset","x0":576.6663818359375,"y0":6054.111480712891,"x1":825,"y1":6140,"payload":{"state":"compromised"}},{"id":"28","type":"action","x0":466.889048576355,"y0":6206.44397354126,"x1":871,"y1":6505,"payload":{"name":"T0846: Remote System Discovery","description":"TRITON's Python script can autodetect Triconex PLCs on the network by sending a UDP broadcast packet over port 1502","timestamp":"","reference":"https://attack.mitre.org/techniques/T0846/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},{"id":"29","type":"asset","x0":548.6663818359375,"y0":6574.555877685547,"x1":797,"y1":6660,"payload":{"state":"compromised"}},{"id":"30","type":"action","x0":471.77802562713623,"y0":6737.555057525635,"x1":876,"y1":7036,"payload":{"name":"T0843: Program Download","description":"TRITON leverages the TriStation protocol to download programs to the Tricon PLCs","timestamp":"","reference":"https://attack.mitre.org/techniques/T0843/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},{"id":"31","type":"asset","x0":562.6663208007812,"y0":7097.889312744141,"x1":811,"y1":7183,"payload":{"state":"compromised"}},{"id":"32","type":"action","x0":482.00019359588623,"y0":7260.444034576416,"x1":887,"y1":7559,"payload":{"name":"T0868: Detect Operating Mode","description":"A TRITON Python module provides string representations of different features of the TriStation protocol, including message and error codes, key position states, and other values returned by the status functions","timestamp":"","reference":"https://attack.mitre.org/techniques/T0868/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},{"id":"38","type":"asset","x0":505.9996337890625,"y0":7626.555999755859,"x1":755,"y1":7712,"payload":{"state":"compromised"}},{"id":"39","type":"action","x0":409.3335065841675,"y0":7763.1106605529785,"x1":814,"y1":8062,"payload":{"name":"T0845: Program Upload","description":"TRITON uploads its payload to the Tricon PLCs","timestamp":"","reference":"https://attack.mitre.org/techniques/T0845/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},{"id":"40","type":"asset","x0":494.66632080078125,"y0":8138.5560302734375,"x1":743,"y1":8224,"payload":{"state":"compromised"}},{"id":"41","type":"action","x0":420.00013256073,"y0":8295.110660552979,"x1":825,"y1":8594,"payload":{"name":"T0855: Unauthorised Command Message","description":"Use TRITON to prevent the Tricon PLC from functioning appropriately","timestamp":"","reference":"https://attack.mitre.org/techniques/T0855/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},{"id":"42","type":"asset","x0":460.66632080078125,"y0":8676.556091308594,"x1":709,"y1":8762,"payload":{"state":"compromised"}},{"id":"43","type":"action","x0":373.33344554901123,"y0":8846.44397354126,"x1":778,"y1":9145,"payload":{"name":"T0880: Loss of Safety","description":"TRITON can reprogram the safety PLC logic to allow unsafe conditions or state to persist","timestamp":"","reference":"https://attack.mitre.org/techniques/T0880/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}}],"edges":[{"id":"2.1","sourceId":"2","targetId":"1","source":{"id":"2","type":"asset","x0":498.666748046875,"y0":184.66668701171875,"x1":747,"y1":270,"payload":{"state":"access gained & manipulated"}},"target":{"id":"1","type":"action","x0":401.33332347869873,"y0":369.33330154418945,"x1":806,"y1":668,"payload":{"name":"T0818: Engineering Workstation Compromise","description":"Compromise workstations within the safety network","timestamp":"","reference":"https://attack.mitre.org/techniques/T0818/","succeeded":0,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"type":"relationship","payload":{"type":"state"}},{"id":"2.3","sourceId":"2","targetId":"3","source":{"id":"2","type":"asset","x0":498.666748046875,"y0":184.66668701171875,"x1":747,"y1":270,"payload":{"state":"access gained & manipulated"}},"target":{"id":"3","type":"data_property","x0":858.6668090820312,"y0":173.33332061767578,"x1":1114,"y1":259,"payload":{"target":"foreign oil refinery's safety devices"}},"type":"data_property_type","payload":{"type":"description"}},{"id":"1.4","sourceId":"1","targetId":"4","source":{"id":"1","type":"action","x0":401.33332347869873,"y0":369.33330154418945,"x1":806,"y1":668,"payload":{"name":"T0818: Engineering Workstation Compromise","description":"Compromise workstations within the safety network","timestamp":"","reference":"https://attack.mitre.org/techniques/T0818/","succeeded":0,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"target":{"id":"4","type":"asset","x0":436.66668701171875,"y0":752.3333740234375,"x1":685,"y1":838,"payload":{"state":"compromised"}},"type":"relationship","payload":{"type":"state change"}},{"id":"4.5","sourceId":"4","targetId":"5","source":{"id":"4","type":"asset","x0":436.66668701171875,"y0":752.3333740234375,"x1":685,"y1":838,"payload":{"state":"compromised"}},"target":{"id":"5","type":"action","x0":157.99994945526123,"y0":931.3333168029785,"x1":563,"y1":1230,"payload":{"name":"T0858: Change Operating Mode","description":"Halt or run a program through the TriStation protocol","timestamp":"","reference":"https://attack.mitre.org/techniques/T0858/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"OR"}},"type":"relationship","payload":{"type":"state"}},{"id":"4.6","sourceId":"4","targetId":"6","source":{"id":"4","type":"asset","x0":436.66668701171875,"y0":752.3333740234375,"x1":685,"y1":838,"payload":{"state":"compromised"}},"target":{"id":"6","type":"action","x0":608.6666975021362,"y0":931.3332862854004,"x1":1013,"y1":1230,"payload":{"name":"T0871: Execution through API","description":"Leverage a custom implementation of the TriStation protocol, which trigger APIs related to program download, program allocation, and program changes","timestamp":"","reference":"https://attack.mitre.org/techniques/T0871/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"OR"}},"type":"relationship","payload":{"type":"state"}},{"id":"5.7","sourceId":"5","targetId":"7","source":{"id":"5","type":"action","x0":157.99994945526123,"y0":931.3333168029785,"x1":563,"y1":1230,"payload":{"name":"T0858: Change Operating Mode","description":"Halt or run a program through the TriStation protocol","timestamp":"","reference":"https://attack.mitre.org/techniques/T0858/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"OR"}},"target":{"id":"7","type":"asset","x0":458.6666259765625,"y0":1320.3334655761719,"x1":707,"y1":1406,"payload":{"state":"compromised"}},"type":"relationship","payload":{"type":"state change"}},{"id":"6.7","sourceId":"6","targetId":"7","source":{"id":"6","type":"action","x0":608.6666975021362,"y0":931.3332862854004,"x1":1013,"y1":1230,"payload":{"name":"T0871: Execution through API","description":"Leverage a custom implementation of the TriStation protocol, which trigger APIs related to program download, program allocation, and program changes","timestamp":"","reference":"https://attack.mitre.org/techniques/T0871/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"OR"}},"target":{"id":"7","type":"asset","x0":458.6666259765625,"y0":1320.3334655761719,"x1":707,"y1":1406,"payload":{"state":"compromised"}},"type":"relationship","payload":{"type":"state change"}},{"id":"7.8","sourceId":"7","targetId":"8","source":{"id":"7","type":"asset","x0":458.6666259765625,"y0":1320.3334655761719,"x1":707,"y1":1406,"payload":{"state":"compromised"}},"target":{"id":"8","type":"data_property","x0":121.33348083496094,"y0":1322.6665725708008,"x1":377,"y1":1408,"payload":{"target":"shut down refinery for several days"}},"type":"data_property_type","payload":{"type":"description"}},{"id":"7.9","sourceId":"7","targetId":"9","source":{"id":"7","type":"asset","x0":458.6666259765625,"y0":1320.3334655761719,"x1":707,"y1":1406,"payload":{"state":"compromised"}},"target":{"id":"9","type":"action","x0":388.66669750213623,"y0":1481.9999732971191,"x1":793,"y1":1781,"payload":{"name":"T0874: Hooking","description":"TRITON's injector modifies the address of the handler for a TriStation protocol command so that when the command is received, the payload may be executed instead of normal processing","timestamp":"","reference":"https://attack.mitre.org/techniques/T0874/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"type":"relationship","payload":{"type":"state"}},{"id":"9.10","sourceId":"9","targetId":"10","source":{"id":"9","type":"action","x0":388.66669750213623,"y0":1481.9999732971191,"x1":793,"y1":1781,"payload":{"name":"T0874: Hooking","description":"TRITON's injector modifies the address of the handler for a TriStation protocol command so that when the command is received, the payload may be executed instead of normal processing","timestamp":"","reference":"https://attack.mitre.org/techniques/T0874/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"target":{"id":"10","type":"asset","x0":452.6666259765625,"y0":1836.3334655761719,"x1":701,"y1":1922,"payload":{"state":"compromised"}},"type":"relationship","payload":{"type":"state change"}},{"id":"10.11","sourceId":"10","targetId":"11","source":{"id":"10","type":"asset","x0":452.6666259765625,"y0":1836.3334655761719,"x1":701,"y1":1922,"payload":{"state":"compromised"}},"target":{"id":"11","type":"action","x0":364.00007152557373,"y0":2000.6665382385254,"x1":769,"y1":2299,"payload":{"name":"T0821: Modify Controller Tasking","description":"Some TRITON components are added to the program table on the Tricon so that they are executed by the firmware once each cycle","timestamp":"","reference":"https://attack.mitre.org/techniques/T0821/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"type":"relationship","payload":{"type":"state"}},{"id":"11.12","sourceId":"11","targetId":"12","source":{"id":"11","type":"action","x0":364.00007152557373,"y0":2000.6665382385254,"x1":769,"y1":2299,"payload":{"name":"T0821: Modify Controller Tasking","description":"Some TRITON components are added to the program table on the Tricon so that they are executed by the firmware once each cycle","timestamp":"","reference":"https://attack.mitre.org/techniques/T0821/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"target":{"id":"12","type":"asset","x0":433.99993896484375,"y0":2365.6669006347656,"x1":683,"y1":2451,"payload":{"state":"compromised"}},"type":"relationship","payload":{"type":"state change"}},{"id":"12.13","sourceId":"12","targetId":"13","source":{"id":"12","type":"asset","x0":433.99993896484375,"y0":2365.6669006347656,"x1":683,"y1":2451,"payload":{"state":"compromised"}},"target":{"id":"13","type":"action","x0":364.6667585372925,"y0":2527.3332862854004,"x1":769,"y1":2826,"payload":{"name":"T0834: Native API","description":"TRITON's payload takes commands from TsHi.ExplReadRam(Ex), TsHi.ExplWriteRam(Ex), and TsHi.ExplExec functions to perform operations on controller memory and registers using syscalls written in PowerPC shellcode","timestamp":"","reference":"https://attack.mitre.org/techniques/T0834/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"type":"relationship","payload":{"type":"state"}},{"id":"13.14","sourceId":"13","targetId":"14","source":{"id":"13","type":"action","x0":364.6667585372925,"y0":2527.3332862854004,"x1":769,"y1":2826,"payload":{"name":"T0834: Native API","description":"TRITON's payload takes commands from TsHi.ExplReadRam(Ex), TsHi.ExplWriteRam(Ex), and TsHi.ExplExec functions to perform operations on controller memory and registers using syscalls written in PowerPC shellcode","timestamp":"","reference":"https://attack.mitre.org/techniques/T0834/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"target":{"id":"14","type":"asset","x0":470.8887939453125,"y0":2889.667022705078,"x1":719,"y1":2975,"payload":{"state":"compromised"}},"type":"relationship","payload":{"type":"state change"}},{"id":"14.15","sourceId":"14","targetId":"15","source":{"id":"14","type":"asset","x0":470.8887939453125,"y0":2889.667022705078,"x1":719,"y1":2975,"payload":{"state":"compromised"}},"target":{"id":"15","type":"action","x0":158.88898754119873,"y0":3067.3332862854004,"x1":563,"y1":3366,"payload":{"name":"T0853: Scripting","description":"Communicate with Triconex Tricon PLCs using its custom Python script. The script uses four Python modules that collectively implement the TriStation protocol via UDP port 1502","timestamp":"","reference":"https://attack.mitre.org/techniques/T0853/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"type":"relationship","payload":{"type":"state"}},{"id":"14.16","sourceId":"14","targetId":"16","source":{"id":"14","type":"asset","x0":470.8887939453125,"y0":2889.667022705078,"x1":719,"y1":2975,"payload":{"state":"compromised"}},"target":{"id":"16","type":"action","x0":646.4445295333862,"y0":3065.110996246338,"x1":1051,"y1":3364,"payload":{"name":"T0885: Commonly Used Port","description":"Communicate over a commonly used port to bypass firewalls or network detection systems and to blend in with normal network activity, to avoid more detailed inspection","timestamp":"","reference":"https://attack.mitre.org/techniques/T0885/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"OR"}},"type":"relationship","payload":{"type":"state"}},{"id":"15.17","sourceId":"15","targetId":"17","source":{"id":"15","type":"action","x0":158.88898754119873,"y0":3067.3332862854004,"x1":563,"y1":3366,"payload":{"name":"T0853: Scripting","description":"Communicate with Triconex Tricon PLCs using its custom Python script. The script uses four Python modules that collectively implement the TriStation protocol via UDP port 1502","timestamp":"","reference":"https://attack.mitre.org/techniques/T0853/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"target":{"id":"17","type":"asset","x0":505.1109619140625,"y0":3462.555938720703,"x1":754,"y1":3548,"payload":{"state":"compromised"}},"type":"relationship","payload":{"type":"state change"}},{"id":"16.17","sourceId":"16","targetId":"17","source":{"id":"16","type":"action","x0":646.4445295333862,"y0":3065.110996246338,"x1":1051,"y1":3364,"payload":{"name":"T0885: Commonly Used Port","description":"Communicate over a commonly used port to bypass firewalls or network detection systems and to blend in with normal network activity, to avoid more detailed inspection","timestamp":"","reference":"https://attack.mitre.org/techniques/T0885/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"OR"}},"target":{"id":"17","type":"asset","x0":505.1109619140625,"y0":3462.555938720703,"x1":754,"y1":3548,"payload":{"state":"compromised"}},"type":"relationship","payload":{"type":"state change"}},{"id":"17.18","sourceId":"17","targetId":"18","source":{"id":"17","type":"asset","x0":505.1109619140625,"y0":3462.555938720703,"x1":754,"y1":3548,"payload":{"state":"compromised"}},"target":{"id":"18","type":"action","x0":417.55561351776123,"y0":3618.4441566467285,"x1":822,"y1":3917,"payload":{"name":"T0857: System Firmware","description":"TRITON's injector injects the payload into the Tricon PLCs' running firmware","timestamp":"","reference":"https://attack.mitre.org/techniques/T0857/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"type":"relationship","payload":{"type":"state"}},{"id":"18.20","sourceId":"18","targetId":"20","source":{"id":"18","type":"action","x0":417.55561351776123,"y0":3618.4441566467285,"x1":822,"y1":3917,"payload":{"name":"T0857: System Firmware","description":"TRITON's injector injects the payload into the Tricon PLCs' running firmware","timestamp":"","reference":"https://attack.mitre.org/techniques/T0857/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"target":{"id":"20","type":"asset","x0":537.555419921875,"y0":3977.6670837402344,"x1":786,"y1":4063,"payload":{"state":"compromised"}},"type":"relationship","payload":{"type":"state change"}},{"id":"20.19","sourceId":"20","targetId":"19","source":{"id":"20","type":"asset","x0":537.555419921875,"y0":3977.6670837402344,"x1":786,"y1":4063,"payload":{"state":"compromised"}},"target":{"id":"19","type":"action","x0":482.88898754119873,"y0":4132.6663246154785,"x1":887,"y1":4431,"payload":{"name":"T0890: Exploitation for Privilege Escalation","description":"Gain supervisor-level access and control system states by exploiting a vulnerability","timestamp":"","reference":"https://attack.mitre.org/techniques/T0890/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"type":"relationship","payload":{"type":"state"}},{"id":"19.21","sourceId":"19","targetId":"21","source":{"id":"19","type":"action","x0":482.88898754119873,"y0":4132.6663246154785,"x1":887,"y1":4431,"payload":{"name":"T0890: Exploitation for Privilege Escalation","description":"Gain supervisor-level access and control system states by exploiting a vulnerability","timestamp":"","reference":"https://attack.mitre.org/techniques/T0890/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"target":{"id":"21","type":"asset","x0":517.5552978515625,"y0":4506.111602783203,"x1":766,"y1":4592,"payload":{"state":"compromised"}},"type":"relationship","payload":{"type":"state change"}},{"id":"21.22","sourceId":"21","targetId":"22","source":{"id":"21","type":"asset","x0":517.5552978515625,"y0":4506.111602783203,"x1":766,"y1":4592,"payload":{"state":"compromised"}},"target":{"id":"22","type":"action","x0":454.0000104904175,"y0":4654.8884925842285,"x1":859,"y1":4953,"payload":{"name":"T0820: Exploitation for Evasion","description":"TRITON's injector exploits a vulnerability in the device firmware to escalate privileges and then it disables and (later patches) a firmware RAM/ROM consistency check","timestamp":"","reference":"https://attack.mitre.org/techniques/T0820/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"type":"relationship","payload":{"type":"state"}},{"id":"22.23","sourceId":"22","targetId":"23","source":{"id":"22","type":"action","x0":454.0000104904175,"y0":4654.8884925842285,"x1":859,"y1":4953,"payload":{"name":"T0820: Exploitation for Evasion","description":"TRITON's injector exploits a vulnerability in the device firmware to escalate privileges and then it disables and (later patches) a firmware RAM/ROM consistency check","timestamp":"","reference":"https://attack.mitre.org/techniques/T0820/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"target":{"id":"23","type":"asset","x0":549.11083984375,"y0":5022.111602783203,"x1":798,"y1":5108,"payload":{"state":"compromised"}},"type":"relationship","payload":{"type":"state change"}},{"id":"23.24","sourceId":"23","targetId":"24","source":{"id":"23","type":"asset","x0":549.11083984375,"y0":5022.111602783203,"x1":798,"y1":5108,"payload":{"state":"compromised"}},"target":{"id":"24","type":"action","x0":460.66669750213623,"y0":5169.9995765686035,"x1":865,"y1":5469,"payload":{"name":"T0872: Indicator Removal on Host","description":"After running the malicious payload, TRITON's Python script overwrites the malicious payload with a \"dummy\" program","timestamp":"","reference":"https://attack.mitre.org/techniques/T0872/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"type":"relationship","payload":{"type":"state"}},{"id":"24.25","sourceId":"24","targetId":"25","source":{"id":"24","type":"action","x0":460.66669750213623,"y0":5169.9995765686035,"x1":865,"y1":5469,"payload":{"name":"T0872: Indicator Removal on Host","description":"After running the malicious payload, TRITON's Python script overwrites the malicious payload with a \"dummy\" program","timestamp":"","reference":"https://attack.mitre.org/techniques/T0872/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"target":{"id":"25","type":"asset","x0":569.11083984375,"y0":5552.333770751953,"x1":818,"y1":5638,"payload":{"state":"compromised"}},"type":"relationship","payload":{"type":"state change"}},{"id":"25.26","sourceId":"25","targetId":"26","source":{"id":"25","type":"asset","x0":569.11083984375,"y0":5552.333770751953,"x1":818,"y1":5638,"payload":{"state":"compromised"}},"target":{"id":"26","type":"action","x0":479.77790355682373,"y0":5690.44397354126,"x1":884,"y1":5989,"payload":{"name":"T0849: Masquerading","description":"TRITON's Python script masquerades as legitimate Triconex software. TRITON's injector masquerades as a standard compiled PowerPC program for the Triconex PLC","timestamp":"","reference":"https://attack.mitre.org/techniques/T0849/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"type":"relationship","payload":{"type":"state"}},{"id":"26.27","sourceId":"26","targetId":"27","source":{"id":"26","type":"action","x0":479.77790355682373,"y0":5690.44397354126,"x1":884,"y1":5989,"payload":{"name":"T0849: Masquerading","description":"TRITON's Python script masquerades as legitimate Triconex software. TRITON's injector masquerades as a standard compiled PowerPC program for the Triconex PLC","timestamp":"","reference":"https://attack.mitre.org/techniques/T0849/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"target":{"id":"27","type":"asset","x0":576.6663818359375,"y0":6054.111480712891,"x1":825,"y1":6140,"payload":{"state":"compromised"}},"type":"relationship","payload":{"type":"state change"}},{"id":"27.28","sourceId":"27","targetId":"28","source":{"id":"27","type":"asset","x0":576.6663818359375,"y0":6054.111480712891,"x1":825,"y1":6140,"payload":{"state":"compromised"}},"target":{"id":"28","type":"action","x0":466.889048576355,"y0":6206.44397354126,"x1":871,"y1":6505,"payload":{"name":"T0846: Remote System Discovery","description":"TRITON's Python script can autodetect Triconex PLCs on the network by sending a UDP broadcast packet over port 1502","timestamp":"","reference":"https://attack.mitre.org/techniques/T0846/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"type":"relationship","payload":{"type":"state"}},{"id":"28.29","sourceId":"28","targetId":"29","source":{"id":"28","type":"action","x0":466.889048576355,"y0":6206.44397354126,"x1":871,"y1":6505,"payload":{"name":"T0846: Remote System Discovery","description":"TRITON's Python script can autodetect Triconex PLCs on the network by sending a UDP broadcast packet over port 1502","timestamp":"","reference":"https://attack.mitre.org/techniques/T0846/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"target":{"id":"29","type":"asset","x0":548.6663818359375,"y0":6574.555877685547,"x1":797,"y1":6660,"payload":{"state":"compromised"}},"type":"relationship","payload":{"type":"state change"}},{"id":"29.30","sourceId":"29","targetId":"30","source":{"id":"29","type":"asset","x0":548.6663818359375,"y0":6574.555877685547,"x1":797,"y1":6660,"payload":{"state":"compromised"}},"target":{"id":"30","type":"action","x0":471.77802562713623,"y0":6737.555057525635,"x1":876,"y1":7036,"payload":{"name":"T0843: Program Download","description":"TRITON leverages the TriStation protocol to download programs to the Tricon PLCs","timestamp":"","reference":"https://attack.mitre.org/techniques/T0843/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"type":"relationship","payload":{"type":"state"}},{"id":"30.31","sourceId":"30","targetId":"31","source":{"id":"30","type":"action","x0":471.77802562713623,"y0":6737.555057525635,"x1":876,"y1":7036,"payload":{"name":"T0843: Program Download","description":"TRITON leverages the TriStation protocol to download programs to the Tricon PLCs","timestamp":"","reference":"https://attack.mitre.org/techniques/T0843/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"target":{"id":"31","type":"asset","x0":562.6663208007812,"y0":7097.889312744141,"x1":811,"y1":7183,"payload":{"state":"compromised"}},"type":"relationship","payload":{"type":"state change"}},{"id":"31.32","sourceId":"31","targetId":"32","source":{"id":"31","type":"asset","x0":562.6663208007812,"y0":7097.889312744141,"x1":811,"y1":7183,"payload":{"state":"compromised"}},"target":{"id":"32","type":"action","x0":482.00019359588623,"y0":7260.444034576416,"x1":887,"y1":7559,"payload":{"name":"T0868: Detect Operating Mode","description":"A TRITON Python module provides string representations of different features of the TriStation protocol, including message and error codes, key position states, and other values returned by the status functions","timestamp":"","reference":"https://attack.mitre.org/techniques/T0868/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"type":"relationship","payload":{"type":"state"}},{"id":"32.38","sourceId":"32","targetId":"38","source":{"id":"32","type":"action","x0":482.00019359588623,"y0":7260.444034576416,"x1":887,"y1":7559,"payload":{"name":"T0868: Detect Operating Mode","description":"A TRITON Python module provides string representations of different features of the TriStation protocol, including message and error codes, key position states, and other values returned by the status functions","timestamp":"","reference":"https://attack.mitre.org/techniques/T0868/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"target":{"id":"38","type":"asset","x0":505.9996337890625,"y0":7626.555999755859,"x1":755,"y1":7712,"payload":{"state":"compromised"}},"type":"relationship","payload":{"type":"state change"}},{"id":"38.39","sourceId":"38","targetId":"39","source":{"id":"38","type":"asset","x0":505.9996337890625,"y0":7626.555999755859,"x1":755,"y1":7712,"payload":{"state":"compromised"}},"target":{"id":"39","type":"action","x0":409.3335065841675,"y0":7763.1106605529785,"x1":814,"y1":8062,"payload":{"name":"T0845: Program Upload","description":"TRITON uploads its payload to the Tricon PLCs","timestamp":"","reference":"https://attack.mitre.org/techniques/T0845/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"type":"relationship","payload":{"type":"state"}},{"id":"39.40","sourceId":"39","targetId":"40","source":{"id":"39","type":"action","x0":409.3335065841675,"y0":7763.1106605529785,"x1":814,"y1":8062,"payload":{"name":"T0845: Program Upload","description":"TRITON uploads its payload to the Tricon PLCs","timestamp":"","reference":"https://attack.mitre.org/techniques/T0845/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"target":{"id":"40","type":"asset","x0":494.66632080078125,"y0":8138.5560302734375,"x1":743,"y1":8224,"payload":{"state":"compromised"}},"type":"relationship","payload":{"type":"state change"}},{"id":"40.41","sourceId":"40","targetId":"41","source":{"id":"40","type":"asset","x0":494.66632080078125,"y0":8138.5560302734375,"x1":743,"y1":8224,"payload":{"state":"compromised"}},"target":{"id":"41","type":"action","x0":420.00013256073,"y0":8295.110660552979,"x1":825,"y1":8594,"payload":{"name":"T0855: Unauthorised Command Message","description":"Use TRITON to prevent the Tricon PLC from functioning appropriately","timestamp":"","reference":"https://attack.mitre.org/techniques/T0855/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"type":"relationship","payload":{"type":"state"}},{"id":"41.42","sourceId":"41","targetId":"42","source":{"id":"41","type":"action","x0":420.00013256073,"y0":8295.110660552979,"x1":825,"y1":8594,"payload":{"name":"T0855: Unauthorised Command Message","description":"Use TRITON to prevent the Tricon PLC from functioning appropriately","timestamp":"","reference":"https://attack.mitre.org/techniques/T0855/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"target":{"id":"42","type":"asset","x0":460.66632080078125,"y0":8676.556091308594,"x1":709,"y1":8762,"payload":{"state":"compromised"}},"type":"relationship","payload":{"type":"state change"}},{"id":"42.43","sourceId":"42","targetId":"43","source":{"id":"42","type":"asset","x0":460.66632080078125,"y0":8676.556091308594,"x1":709,"y1":8762,"payload":{"state":"compromised"}},"target":{"id":"43","type":"action","x0":373.33344554901123,"y0":8846.44397354126,"x1":778,"y1":9145,"payload":{"name":"T0880: Loss of Safety","description":"TRITON can reprogram the safety PLC logic to allow unsafe conditions or state to persist","timestamp":"","reference":"https://attack.mitre.org/techniques/T0880/","succeeded":1,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"type":"relationship","payload":{"type":"state"}}],"schema":{"lists":{},"nodes":{"action":{"color":"#637bc9","outline":"#708ce6","subtype":null,"fields":{"name":{"type":"string","default":"","required":true},"description":{"type":"string","default":"","required":true},"timestamp":{"type":"datetime","default":""},"reference":{"type":"string","default":""},"succeeded":{"type":"number","default":0,"range":{"min":0,"max":1}},"confidence":{"type":"number","default":0,"range":{"min":0,"max":1}},"logic_operator_language":{"type":"string","default":""},"logic_operator":{"type":"string","default":"","required":true}}},"asset":{"color":"#c26130","outline":"#e57339","subtype":null,"fields":{"state":{"type":"string","default":""}}},"object_property_target":{"color":"#b62020","outline":"#d62727","subtype":null,"fields":{"target":{"type":"string","default":"","required":true}}},"data_property":{"color":"#31347c","outline":"#4246a6","subtype":null,"fields":{"target":{"type":"string","default":"","required":true}}}},"edges":{"relationship":{"color":"#4d4d4d","outline":"#696969","hasArrow":true,"hasDash":false,"fields":{"type":{"type":"string","default":"","required":true}}},"object_property_type":{"color":"#099","outline":"#00b8b8","hasArrow":true,"hasDash":false,"fields":{"type":{"type":"string","default":"","required":true}}},"data_property_type":{"color":"#31347c","outline":"#4246a6","hasArrow":true,"hasDash":false,"fields":{"type":{"type":"string","default":"","required":true}}}},"edgeRules":[{"source":"action","target":"asset","type":"relationship"},{"source":"action","target":"data_property","type":"data_property_type"},{"source":"action","target":"object_property_target","type":"object_property_type"},{"source":"asset","target":"action","type":"relationship"},{"source":"asset","target":"data_property","type":"data_property_type"},{"source":"asset","target":"object_property_target","type":"object_property_type"},{"source":"asset","target":"asset","type":"object_property_type"}]}}